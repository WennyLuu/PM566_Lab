---
title: "PM566 Lab06"
author: "Wenjia Lu"
format:
  html:
    embed-resources: true
---

```{r}
## Set packages and download data ##

library(dplyr)
library(ggplot2)
library(tidyr)
library(tidytext)
library(readr)
library(forcats)

mt_samples <- read_csv("https://raw.githubusercontent.com/USCbiostats/data-science-data/master/00_mtsamples/mtsamples.csv")
mt_samples <- mt_samples %>%
  select(description, medical_specialty, transcription)

head(mt_samples)
summary(mt_samples)
table(mt_samples$medical_specialty)

```


```{r}
## Q1 What specialties do we have? ##
# How many different categories do we have? Are these categories related? overlapping? evenly distributed?

specialties <- 
  mt_samples %>%
  count(medical_specialty, sort = TRUE)

specialties %>%
  arrange(desc(n)) %>%
knitr::kable()
# There are 40 medical specialties and they are overlapping.

specialties %>%
  top_n(10) %>%
  ggplot( aes(x= n, y= fct_reorder(medical_specialty, n))) +
  geom_col()
# The distribution is not all uniformly distributed.

```


```{r}
## Q2 ##
# Tokenize the words in the transcription col 
# Count the number of times each token appears
# Visualize the top 20 most frequent words

mt_samples %>%
  unnest_tokens(word, transcription) %>%
  count(word, sort = TRUE) %>%
  top_n(20, n) %>%
  ggplot(aes(n, fct_reorder(word, n))) +
  geom_col()
# There are a lot of stop words, non-specific to medical text. But we could see "patient".

```


```{r}
## Q3 Redo visualization but remove stop words before and Bonus points if you remove numbers as well ##
# What do we see know that we have removed stop words?
# Does it give us a better idea of what the text is about?

mt_samples %>%
  unnest_tokens(word, transcription) %>%
  count(word, sort = TRUE) %>%
  anti_join(stop_words, by = c("word")) %>%
  filter( !grepl(pattern = "^[0-9]+$", x = word)) %>%
  top_n(20, n) %>%
  ggplot(aes(n, fct_reorder(word, n))) +
  geom_col()
# We could see more medical terminology now that we have removed the stop words.  It gives us a better idea of what the text is about.

```


```{r}
## Q4 Repeat question 2 but tokenize into bi-grams ##
# How does the result change if you look at tri-grams? 

# bi-grams
mt_samples %>%
  unnest_ngrams(bigram, transcription, n = 2) %>%
  count(bigram, sort = TRUE) %>%
  top_n(20) %>%
  ggplot(aes(n, fct_reorder(bigram,n))) + 
    geom_col()
# Using bi-grams is not very informative, let's try tri-grams.

# tri-grams
mt_samples %>%
  unnest_ngrams(trigram, transcription, n = 3) %>%
  count(trigram, sort = TRUE) %>%
  top_n(20) %>%
  ggplot(aes(n, fct_reorder(trigram,n))) + 
    geom_col()
# Top 20 trigrams were more detailed andcontained more medical terminology.

```


```{r}
## Q5 From question 4. Pick a word and count the words that appears after and before it ##

ptbigram <-
  mt_samples %>%
  unnest_ngrams(bigram, transcription, n = 2) %>%
  separate(bigram, into = c("word1", "word2"), sep = " ") %>%
  select(word1, word2) %>%
  filter(word1 == "patient" | word2 == "patient")

# before patient
ptbigram %>%
  filter(word2 == "patient") %>%
  count(word1, sort = T) %>%
  anti_join(stop_words, by = c("word1"= "word")) %>%
  top_n(10) %>%
knitr::kable(caption = "Words BEFORE 'patient'")

# after patient
ptbigram %>%
  filter(word1 == "patient") %>%
  count(word2, sort = T) %>%
  anti_join(stop_words, by= c("word2"= "word")) %>%
  top_n(10) %>%
knitr::kable(caption = "Words AFTER 'patient'")

```


```{r}
## Q6 Which words are most used in each of the specialties? ##
# Remember to remove stop words 
# How about the most 5 used words?

mt_samples %>%
  unnest_tokens(word, transcription) %>%
  group_by(medical_specialty) %>%
  count(word, sort = TRUE) %>%
  filter(!(word %in% stop_words$word) & !grepl(pattern = "^[0-9]+$", x = word)) %>%
  top_n(5, n) %>%
  arrange(medical_specialty, desc(n)) %>%
knitr::kable()

```


```{r}
## Q7 Extra: Find your own insight in data ##
# Interesting ngrams
# See if certain words are used more in some specialities than others

mt_bigrams <- mt_samples %>%
  unnest_ngrams(token, transcription, n = 2) %>%
  separate(token, into = c("word1", "word2"), sep = " ") %>%
  anti_join(tidytext::stop_words, by = c("word1" = "word")) %>%
  anti_join(tidytext::stop_words, by = c("word2" = "word")) %>%
  unite(bigram, word1, word2, sep = " ")

mt_bigrams %>%
  count(medical_specialty, bigram, sort = TRUE) %>%
  bind_tf_idf(bigram, medical_specialty, n) %>%
  arrange(desc(tf_idf)) %>%
  top_n(10, n)

# Coronary artery is most used in Cardiovascular/Pulmonary.

```

